{"remainingRequest":"D:\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SpringBoot-master\\MemoryFront\\src\\views\\register.vue?vue&type=style&index=0&id=77453986&lang=css","dependencies":[{"path":"D:\\SpringBoot-master\\MemoryFront\\src\\views\\register.vue","mtime":1716967218000},{"path":"D:\\SpringBoot-master\\MemoryFront\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\SpringBoot-master\\MemoryFront\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpib2R5IHsNCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9hc3NldHMvbG9nby9iYWNrLnBuZyIpOw0KfQ0KDQoudGl0bGUgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIG1hcmdpbi1sZWZ0OiAxMzBweDsNCiAgbWFyZ2luLWJvdHRvbTogMzBweDsNCn0NCg0KLnJlZ2lzdGVyIHsNCiAgd2lkdGg6IDQ1MHB4Ow0KICBoZWlnaHQ6IDIyMHB4Ow0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHRvcDogNDUlOw0KICBsZWZ0OiA1MCU7DQogIG1hcmdpbi10b3A6IC0yNTBweDsNCiAgbWFyZ2luLWxlZnQ6IC0yMTBweDsNCn0NCg=="},{"version":3,"sources":["register.vue"],"names":[],"mappings":";AA8RA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n\r\n  <div class=\"register\">\r\n    <div class=\"title\">\r\n      <h1>用户注册</h1>\r\n    </div>\r\n    <a-form :form=\"form\" @submit=\"handleSubmit\">\r\n      <a-form-item v-bind=\"formItemLayout\">\r\n        <span slot=\"label\">\r\n          账号&nbsp;\r\n          <a-tooltip title=\"不得出现中文字符\">\r\n            <a-icon type=\"question-circle-o\" />\r\n          </a-tooltip>\r\n        </span>\r\n        <a-input v-decorator=\"[\r\n          'username',\r\n          {\r\n            rules: [{ required: true, message: '请输入您的用户名', whitespace: true }],\r\n          },\r\n        ]\" size=\"large\" />\r\n      </a-form-item>\r\n      <a-form-item v-bind=\"formItemLayout\" label=\"账号密码\" has-feedback>\r\n        <a-input v-decorator=\"[\r\n          'password',\r\n          {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: '请输入账号密码!',\r\n              },\r\n              {\r\n                validator: validateToNextPassword,\r\n              },\r\n            ],\r\n          },\r\n        ]\" type=\"password\" size=\"large\" />\r\n      </a-form-item>\r\n      <a-form-item v-bind=\"formItemLayout\" label=\"确认密码\" has-feedback>\r\n        <a-input v-decorator=\"[\r\n          'confirm',\r\n          {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: '请输入账号密码!',\r\n              },\r\n              {\r\n                validator: compareToFirstPassword,\r\n              },\r\n            ],\r\n          },\r\n        ]\" type=\"password\" @blur=\"handleConfirmBlur\" size=\"large\" />\r\n      </a-form-item>\r\n      <a-form-item v-bind=\"formItemLayout\" label=\"E-mail\">\r\n        <a-input v-decorator=\"[\r\n          'email',\r\n          {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: '邮箱不合法!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: '请输入你的邮箱!',\r\n              },\r\n            ],\r\n          },\r\n        ]\" size=\"large\" @change=\"codeChange\" />\r\n      </a-form-item>\r\n      <a-form-item v-bind=\"formItemLayout\" label=\"验证码\">\r\n        <a-input v-decorator=\"[\r\n          'codeNumber',\r\n          {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: '请输入你的验证码!',\r\n              },\r\n            ],\r\n          },\r\n        ]\" size=\"large\" style=\"width:50%;float:left;margin-right: 5%;\" :maxLength=\"10\" />\r\n        <a-button type=\"primary\" @click=\"sendCode()\" :disabled=\"codeState\">\r\n          {{ codetxt }}\r\n        </a-button>\r\n      </a-form-item>\r\n      <a-form-item v-bind=\"tailFormItemLayout\">\r\n        <a-checkbox v-decorator=\"['agreement', { valuePropName: 'checked' }]\">\r\n          我已经阅读\r\n          <a href=\"\">\r\n            本网站协议\r\n          </a>\r\n        </a-checkbox>\r\n      </a-form-item>\r\n      <a-form-item v-bind=\"tailFormItemLayout\">\r\n        <a-button type=\"primary\" html-type=\"submit\">\r\n          点击注册\r\n        </a-button>\r\n        <a-button @click=\"gotoLogin\" style=\"margin-left:100px\" type=\"primary\">\r\n          返回登录\r\n        </a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n\r\n  </div>\r\n\r\n\r\n</template>\r\n<script>\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      codeState: false,\r\n      codetxt: '获取验证码',\r\n      confirmDirty: false,\r\n      autoCompleteResult: [],\r\n      formItemLayout: {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 8 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n      },\r\n      tailFormItemLayout: {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n  beforeCreate() {\r\n    this.form = this.$form.createForm(this, { name: 'register' });\r\n  },\r\n\r\n  methods: {\r\n    codeChange() {\r\n      // let error = this.form.getFieldError('email');\r\n      // if (!error) {\r\n      //   this.codeState = false;\r\n      // }\r\n      // else {\r\n      //   this.codeState = true;\r\n\r\n      // }\r\n    },\r\n    sendCode() {\r\n      let email = this.form.getFieldValue('email');\r\n      let error = this.form.getFieldError('email');\r\n      if (email == undefined || email == \"\") {\r\n        this.form.validateFields(['email']);\r\n        return;\r\n      }\r\n      if (!error) {\r\n        this.codeState = false;\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n      // 更换样式\r\n      const t = 60;\r\n      var i = t;\r\n      let timer = setInterval(() => {\r\n        this.codetxt = i + \"s后重新获取\";\r\n        if (i == t) {\r\n          this.codeState = true;\r\n        }\r\n        if (i == 0) {\r\n          this.codeState = false;\r\n          this.codetxt = '获取验证码';\r\n          clearInterval(timer);\r\n        }\r\n        i--;\r\n      }, 1000)\r\n      // 发送验证码请求\r\n      \r\n      let data = new FormData();\r\n      data.append('email', email);\r\n      var _this = this;\r\n      this.axios({\r\n        url: _this.$serveUrL + \"/code\",\r\n        method: \"post\",\r\n        data: data,\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        crossDomain: true,\r\n      }).then(function (resp) {\r\n       resp;\r\n      })\r\n\r\n\r\n    },\r\n    gotoLogin() {\r\n      this.$router.go(-1);\r\n    },\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      this.form.validateFieldsAndScroll((err, values) => {\r\n        var _this = this;\r\n\r\n        if (err) {\r\n          this.$message({\r\n            type: 'warning',\r\n            message: '请填写完整信息!'\r\n          });\r\n        }\r\n        else {\r\n          this.axios({\r\n            url: _this.$serveUrL + \"/user/add\",\r\n            method: \"post\",\r\n            data: values,\r\n            transformRequest: [\r\n              function (data) {\r\n                let ret = ''\r\n                for (let it in data) {\r\n                  ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n                }\r\n                ret = ret.substring(0, ret.lastIndexOf('&'));\r\n                return ret\r\n              }\r\n            ],\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            crossDomain: true,\r\n          }).then(function (resp) {\r\n            if (resp.data.status == \"success\") {\r\n              _this.$message({\r\n                type: 'success',\r\n                message: '注册成功!'\r\n              });\r\n              _this.$router.push({ name: 'login' });\r\n            }\r\n            if (resp.data.status == \"codeError\") {\r\n              _this.$message({\r\n                type: 'fail',\r\n                message: '验证码错误!'\r\n              });\r\n            }\r\n            if (resp.data.status == \"exist\") {\r\n              _this.$message({\r\n                type: 'waring',\r\n                message: '账号名已存在!'\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    handleConfirmBlur(e) {\r\n      const value = e.target.value;\r\n      this.confirmDirty = this.confirmDirty || !!value;\r\n    },\r\n    compareToFirstPassword(rule, value, callback) {\r\n      const form = this.form;\r\n      if (value && value !== form.getFieldValue('password')) {\r\n        callback('两次输入的密码不一致');\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    validateToNextPassword(rule, value, callback) {\r\n      console.log(value);\r\n      const form = this.form;\r\n      if (value && this.confirmDirty) {\r\n        form.validateFields(['confirm'], { force: true });\r\n      }\r\n      callback();\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n<style >\r\nbody {\r\n  background-image: url(\"../assets/logo/back.png\");\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  margin-left: 130px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.register {\r\n  width: 450px;\r\n  height: 220px;\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  margin-top: -250px;\r\n  margin-left: -210px;\r\n}\r\n</style>"]}]}